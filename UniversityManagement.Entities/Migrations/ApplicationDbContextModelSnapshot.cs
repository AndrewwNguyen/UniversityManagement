// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniversityManagement.Entities.Data;

#nullable disable

namespace UniversityManagement.Entities.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UniversityManagement.Entities.Models.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassId"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("YearOfAdmission")
                        .HasColumnType("datetime2");

                    b.HasKey("ClassId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Class", (string)null);

                    b.HasData(
                        new
                        {
                            ClassId = 1,
                            Amount = 75,
                            ClassName = "Cong nghe thong tin 1",
                            DepartmentId = 1,
                            YearOfAdmission = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ClassId = 2,
                            Amount = 70,
                            ClassName = "Cong nghe thong tin 2",
                            DepartmentId = 1,
                            YearOfAdmission = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ClassId = 3,
                            Amount = 46,
                            ClassName = "Marketing 2",
                            DepartmentId = 4,
                            YearOfAdmission = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ClassId = 4,
                            Amount = 49,
                            ClassName = "Co Khi",
                            DepartmentId = 5,
                            YearOfAdmission = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ClassId = 5,
                            Amount = 70,
                            ClassName = "Cong nghe thong tin 3",
                            DepartmentId = 1,
                            YearOfAdmission = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ClassId = 6,
                            Amount = 60,
                            ClassName = "Quan Tri Kinh Doanh 1",
                            DepartmentId = 3,
                            YearOfAdmission = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ClassId = 7,
                            Amount = 72,
                            ClassName = "Luat Kinh Te 1",
                            DepartmentId = 2,
                            YearOfAdmission = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ClassId = 8,
                            Amount = 75,
                            ClassName = "Co Khi 2",
                            DepartmentId = 5,
                            YearOfAdmission = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.ClassRoom", b =>
                {
                    b.Property<int>("ClassRoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassRoomId"));

                    b.Property<string>("ClassRoomName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClassRoomId");

                    b.ToTable("ClassRoom", (string)null);

                    b.HasData(
                        new
                        {
                            ClassRoomId = 1,
                            ClassRoomName = "Room 303A7",
                            Description = "No"
                        });
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.Department", b =>
                {
                    b.Property<int>("DeparmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeparmentId"));

                    b.Property<string>("DeparmentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeparmentId");

                    b.ToTable("Department", (string)null);

                    b.HasData(
                        new
                        {
                            DeparmentId = 1,
                            DeparmentName = "Cong Nghe Thong Tin",
                            Description = "No"
                        },
                        new
                        {
                            DeparmentId = 2,
                            DeparmentName = "Luat kinh Te",
                            Description = "No"
                        },
                        new
                        {
                            DeparmentId = 3,
                            DeparmentName = "Quan Tri Kinh Doanh",
                            Description = "No"
                        },
                        new
                        {
                            DeparmentId = 4,
                            DeparmentName = "Marketing",
                            Description = "No"
                        },
                        new
                        {
                            DeparmentId = 5,
                            DeparmentName = "Co Khi",
                            Description = "No"
                        });
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("StudentId");

                    b.HasIndex("ClassId");

                    b.ToTable("Student", (string)null);

                    b.HasData(
                        new
                        {
                            StudentId = 2,
                            Address = "Bac Ninh",
                            ClassId = 1,
                            DateOfBirth = new DateTime(2001, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "No",
                            StudentName = "Nguyen Duc Bao Son"
                        },
                        new
                        {
                            StudentId = 3,
                            Address = "Ha Noi",
                            ClassId = 1,
                            DateOfBirth = new DateTime(2001, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "No",
                            StudentName = "Nguyen Quang Trung"
                        },
                        new
                        {
                            StudentId = 4,
                            Address = "Bac Giang",
                            ClassId = 3,
                            DateOfBirth = new DateTime(2001, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "No",
                            StudentName = "Nguyen Manh Hiep"
                        },
                        new
                        {
                            StudentId = 5,
                            Address = "Ha Noi",
                            ClassId = 4,
                            DateOfBirth = new DateTime(2003, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "No",
                            StudentName = "Vu Hoang Minh"
                        },
                        new
                        {
                            StudentId = 6,
                            Address = "Hai Duong",
                            ClassId = 3,
                            DateOfBirth = new DateTime(1999, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "No",
                            StudentName = "Doan Duy Anh"
                        },
                        new
                        {
                            StudentId = 7,
                            Address = "Ha Noi",
                            ClassId = 2,
                            DateOfBirth = new DateTime(2000, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "No",
                            StudentName = "Phan Tien Anh"
                        },
                        new
                        {
                            StudentId = 8,
                            Address = "Ha Noi",
                            ClassId = 4,
                            DateOfBirth = new DateTime(2000, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "No",
                            StudentName = "Ngo Ngoc Duc"
                        },
                        new
                        {
                            StudentId = 9,
                            Address = "Nam Dinh",
                            ClassId = 5,
                            DateOfBirth = new DateTime(1998, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "No",
                            StudentName = "Nguyen Thi Khanh"
                        },
                        new
                        {
                            StudentId = 10,
                            Address = "Thai Binh",
                            ClassId = 3,
                            DateOfBirth = new DateTime(2001, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "No",
                            StudentName = "Le Kien Truc"
                        });
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Subject", (string)null);

                    b.HasData(
                        new
                        {
                            SubjectId = 1,
                            Description = "No",
                            SubjectName = "Lap Trinh Web",
                            TeacherId = 1
                        },
                        new
                        {
                            SubjectId = 2,
                            Description = "No",
                            SubjectName = "An Ninh Mang",
                            TeacherId = 2
                        },
                        new
                        {
                            SubjectId = 3,
                            Description = "No",
                            SubjectName = "Tri Tue Nhan Tao",
                            TeacherId = 1
                        },
                        new
                        {
                            SubjectId = 4,
                            Description = "No",
                            SubjectName = "Lich Su Dang",
                            TeacherId = 3
                        },
                        new
                        {
                            SubjectId = 5,
                            Description = "No",
                            SubjectName = "Dai So Tuyen Tinh",
                            TeacherId = 4
                        },
                        new
                        {
                            SubjectId = 6,
                            Description = "No",
                            SubjectName = "Co So Du Lieu",
                            TeacherId = 5
                        },
                        new
                        {
                            SubjectId = 7,
                            Description = "No",
                            SubjectName = "Xu Ly Anh",
                            TeacherId = 6
                        },
                        new
                        {
                            SubjectId = 8,
                            Description = "No",
                            SubjectName = "Khai Pha Du Lieu",
                            TeacherId = 1
                        });
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.Subject_Classroom", b =>
                {
                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("ClassRoomId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubjectId", "ClassRoomId");

                    b.HasIndex("ClassRoomId");

                    b.ToTable("Subject_Classroom");
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.Subject_Student", b =>
                {
                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Mark")
                        .HasColumnType("real");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("SubjectId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("Subject_Student");

                    b.HasData(
                        new
                        {
                            SubjectId = 4,
                            StudentId = 2,
                            Mark = 7f,
                            Status = 1
                        },
                        new
                        {
                            SubjectId = 2,
                            StudentId = 2,
                            Status = 0
                        },
                        new
                        {
                            SubjectId = 1,
                            StudentId = 3,
                            Status = 0
                        },
                        new
                        {
                            SubjectId = 1,
                            StudentId = 2,
                            Status = 0
                        },
                        new
                        {
                            SubjectId = 2,
                            StudentId = 3,
                            Status = 0
                        });
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeacherName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeacherId");

                    b.ToTable("Teacher", (string)null);

                    b.HasData(
                        new
                        {
                            TeacherId = 1,
                            Description = "No",
                            TeacherName = "Bui Ngoc Dung"
                        },
                        new
                        {
                            TeacherId = 2,
                            Description = "No",
                            TeacherName = "Nguyen Kim Sao"
                        },
                        new
                        {
                            TeacherId = 3,
                            Description = "No",
                            TeacherName = "Nguyen Thu Phuong"
                        },
                        new
                        {
                            TeacherId = 4,
                            Description = "No",
                            TeacherName = "Thieu Tran Cuong"
                        },
                        new
                        {
                            TeacherId = 5,
                            Description = "No",
                            TeacherName = "Dao Nhu Quynh"
                        },
                        new
                        {
                            TeacherId = 6,
                            Description = "No",
                            TeacherName = "Nguyen Gia Quy"
                        });
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.Class", b =>
                {
                    b.HasOne("UniversityManagement.Entities.Models.Department", "Deparment")
                        .WithMany("Classes")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deparment");
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.Student", b =>
                {
                    b.HasOne("UniversityManagement.Entities.Models.Class", "Class")
                        .WithMany("Students")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.Subject", b =>
                {
                    b.HasOne("UniversityManagement.Entities.Models.Teacher", "Teacher")
                        .WithMany("Subjects")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.Subject_Classroom", b =>
                {
                    b.HasOne("UniversityManagement.Entities.Models.ClassRoom", "ClassRoom")
                        .WithMany("Subject_Classrooms")
                        .HasForeignKey("ClassRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversityManagement.Entities.Models.Subject", "Subject")
                        .WithMany("Subject_Classroom")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassRoom");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.Subject_Student", b =>
                {
                    b.HasOne("UniversityManagement.Entities.Models.Student", "Student")
                        .WithMany("Subject_Students")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversityManagement.Entities.Models.Subject", "Subject")
                        .WithMany("Subject_Student")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.Class", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.ClassRoom", b =>
                {
                    b.Navigation("Subject_Classrooms");
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.Department", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.Student", b =>
                {
                    b.Navigation("Subject_Students");
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.Subject", b =>
                {
                    b.Navigation("Subject_Classroom");

                    b.Navigation("Subject_Student");
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.Teacher", b =>
                {
                    b.Navigation("Subjects");
                });
#pragma warning restore 612, 618
        }
    }
}
