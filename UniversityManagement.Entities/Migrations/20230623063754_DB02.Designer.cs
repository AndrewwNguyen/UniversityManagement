// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniversityManagement.Entities.Data;

#nullable disable

namespace UniversityManagement.Entities.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230623063754_DB02")]
    partial class DB02
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UniversityManagement.Entities.Models.Class", b =>
                {
                    b.Property<int>("IdClass")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClass"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("IdDeparment")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("YearOfAdmission")
                        .HasColumnType("datetime2");

                    b.HasKey("IdClass");

                    b.HasIndex("IdDeparment");

                    b.ToTable("Class");

                    b.HasData(
                        new
                        {
                            IdClass = 1,
                            Amount = 75,
                            IdDeparment = 1,
                            Name = "Cong nghe thong tin 1",
                            YearOfAdmission = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdClass = 2,
                            Amount = 70,
                            IdDeparment = 1,
                            Name = "Cong nghe thong tin 2",
                            YearOfAdmission = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdClass = 3,
                            Amount = 46,
                            IdDeparment = 4,
                            Name = "Marketing 2",
                            YearOfAdmission = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdClass = 4,
                            Amount = 49,
                            IdDeparment = 5,
                            Name = "Co Khi",
                            YearOfAdmission = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdClass = 5,
                            Amount = 70,
                            IdDeparment = 1,
                            Name = "Cong nghe thong tin 3",
                            YearOfAdmission = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdClass = 6,
                            Amount = 60,
                            IdDeparment = 3,
                            Name = "Quan Tri Kinh Doanh 1",
                            YearOfAdmission = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdClass = 7,
                            Amount = 72,
                            IdDeparment = 2,
                            Name = "Luat Kinh Te 1",
                            YearOfAdmission = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdClass = 8,
                            Amount = 75,
                            IdDeparment = 5,
                            Name = "Co Khi 2",
                            YearOfAdmission = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.ClassRoom", b =>
                {
                    b.Property<int>("IdClassRoom")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClassRoom"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdClassRoom");

                    b.ToTable("ClassRoom");

                    b.HasData(
                        new
                        {
                            IdClassRoom = 1,
                            Description = "No",
                            Name = "Room 303A7"
                        });
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.Department", b =>
                {
                    b.Property<int>("IdDeparment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDeparment"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDeparment");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            IdDeparment = 1,
                            Description = "No",
                            Name = "Cong Nghe Thong Tin"
                        },
                        new
                        {
                            IdDeparment = 2,
                            Description = "No",
                            Name = "Luat kinh Te"
                        },
                        new
                        {
                            IdDeparment = 3,
                            Description = "No",
                            Name = "Quan Tri Kinh Doanh"
                        },
                        new
                        {
                            IdDeparment = 4,
                            Description = "No",
                            Name = "Marketing"
                        },
                        new
                        {
                            IdDeparment = 5,
                            Description = "No",
                            Name = "Co Khi"
                        });
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.Student", b =>
                {
                    b.Property<int>("IdStudent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStudent"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdClass")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdStudent");

                    b.HasIndex("IdClass");

                    b.ToTable("Student", (string)null);

                    b.HasData(
                        new
                        {
                            IdStudent = 2,
                            Address = "Bac Ninh",
                            DateOfBirth = new DateTime(2012, 12, 25, 1, 3, 12, 0, DateTimeKind.Unspecified),
                            IdClass = 1,
                            Name = "Nguyen Duc Bao Son"
                        },
                        new
                        {
                            IdStudent = 3,
                            Address = "Ha Noi",
                            DateOfBirth = new DateTime(2012, 12, 25, 1, 3, 12, 0, DateTimeKind.Unspecified),
                            IdClass = 1,
                            Name = "Nguyen Quang Trung"
                        },
                        new
                        {
                            IdStudent = 4,
                            Address = "Bac Giang",
                            DateOfBirth = new DateTime(2012, 12, 25, 1, 3, 12, 0, DateTimeKind.Unspecified),
                            IdClass = 3,
                            Name = "Nguyen Manh Hiep"
                        },
                        new
                        {
                            IdStudent = 5,
                            Address = "Ha Noi",
                            DateOfBirth = new DateTime(2012, 12, 25, 1, 3, 12, 0, DateTimeKind.Unspecified),
                            IdClass = 4,
                            Name = "Vu Hoang Minh"
                        },
                        new
                        {
                            IdStudent = 6,
                            Address = "Hai Duong",
                            DateOfBirth = new DateTime(2012, 12, 25, 1, 3, 12, 0, DateTimeKind.Unspecified),
                            IdClass = 3,
                            Name = "Doan Duy Anh"
                        },
                        new
                        {
                            IdStudent = 7,
                            Address = "Ha Noi",
                            DateOfBirth = new DateTime(2012, 12, 25, 1, 3, 12, 0, DateTimeKind.Unspecified),
                            IdClass = 2,
                            Name = "Phan Tien Anh"
                        },
                        new
                        {
                            IdStudent = 8,
                            Address = "Ha Noi",
                            DateOfBirth = new DateTime(2012, 12, 25, 1, 3, 12, 0, DateTimeKind.Unspecified),
                            IdClass = 4,
                            Name = "Ngo Ngoc Duc"
                        },
                        new
                        {
                            IdStudent = 9,
                            Address = "Nam Dinh",
                            DateOfBirth = new DateTime(2012, 12, 25, 1, 3, 12, 0, DateTimeKind.Unspecified),
                            IdClass = 5,
                            Name = "Nguyen Thi Khanh"
                        },
                        new
                        {
                            IdStudent = 10,
                            Address = "Thai Binh",
                            DateOfBirth = new DateTime(2012, 12, 25, 1, 3, 12, 0, DateTimeKind.Unspecified),
                            IdClass = 3,
                            Name = "Le Kien Truc"
                        });
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.Subject", b =>
                {
                    b.Property<int>("IdSubject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSubject"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdTeacher")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSubject");

                    b.HasIndex("IdTeacher");

                    b.ToTable("Subject", (string)null);

                    b.HasData(
                        new
                        {
                            IdSubject = 1,
                            Description = "No",
                            IdTeacher = 1,
                            Name = "Lap Trinh Web"
                        },
                        new
                        {
                            IdSubject = 2,
                            Description = "No",
                            IdTeacher = 2,
                            Name = "An Ninh Mang"
                        },
                        new
                        {
                            IdSubject = 3,
                            Description = "No",
                            IdTeacher = 1,
                            Name = "Tri Tue Nhan Tao"
                        },
                        new
                        {
                            IdSubject = 4,
                            Description = "No",
                            IdTeacher = 3,
                            Name = "Lich Su Dang"
                        },
                        new
                        {
                            IdSubject = 5,
                            Description = "No",
                            IdTeacher = 4,
                            Name = "Dai So Tuyen Tinh"
                        },
                        new
                        {
                            IdSubject = 6,
                            Description = "No",
                            IdTeacher = 5,
                            Name = "Co So Du Lieu"
                        },
                        new
                        {
                            IdSubject = 7,
                            Description = "No",
                            IdTeacher = 6,
                            Name = "Xu Ly Anh"
                        },
                        new
                        {
                            IdSubject = 8,
                            Description = "No",
                            IdTeacher = 1,
                            Name = "Khai Pha Du Lieu"
                        });
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.Subject_Classroom", b =>
                {
                    b.Property<int>("IdSubject")
                        .HasColumnType("int");

                    b.Property<int>("IdRoom")
                        .HasColumnType("int");

                    b.HasKey("IdSubject", "IdRoom");

                    b.HasIndex("IdRoom");

                    b.ToTable("Subject_Classroom");
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.Subject_Score", b =>
                {
                    b.Property<int>("IdSubject")
                        .HasColumnType("int");

                    b.Property<int>("IdStudent")
                        .HasColumnType("int");

                    b.Property<int>("Mark")
                        .HasColumnType("int");

                    b.HasKey("IdSubject", "IdStudent");

                    b.HasIndex("IdStudent");

                    b.ToTable("Subject_Score");
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.Subject_Student", b =>
                {
                    b.Property<int>("IdSubject")
                        .HasColumnType("int");

                    b.Property<int>("IdStudent")
                        .HasColumnType("int");

                    b.HasKey("IdSubject", "IdStudent");

                    b.HasIndex("IdStudent");

                    b.ToTable("Subject_Student");

                    b.HasData(
                        new
                        {
                            IdSubject = 4,
                            IdStudent = 2
                        },
                        new
                        {
                            IdSubject = 2,
                            IdStudent = 2
                        },
                        new
                        {
                            IdSubject = 1,
                            IdStudent = 3
                        },
                        new
                        {
                            IdSubject = 1,
                            IdStudent = 2
                        },
                        new
                        {
                            IdSubject = 2,
                            IdStudent = 3
                        });
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.Teacher", b =>
                {
                    b.Property<int>("IdTeacher")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTeacher"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTeacher");

                    b.ToTable("Teacher");

                    b.HasData(
                        new
                        {
                            IdTeacher = 1,
                            Description = "No",
                            Name = "Bui Ngoc Dung"
                        },
                        new
                        {
                            IdTeacher = 2,
                            Description = "No",
                            Name = "Nguyen Kim Sao"
                        },
                        new
                        {
                            IdTeacher = 3,
                            Description = "No",
                            Name = "Nguyen Thu Phuong"
                        },
                        new
                        {
                            IdTeacher = 4,
                            Description = "No",
                            Name = "Thieu Tran Cuong"
                        },
                        new
                        {
                            IdTeacher = 5,
                            Description = "No",
                            Name = "Dao Nhu Quynh"
                        },
                        new
                        {
                            IdTeacher = 6,
                            Description = "No",
                            Name = "Nguyen Gia Quy"
                        });
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.Class", b =>
                {
                    b.HasOne("UniversityManagement.Entities.Models.Department", "Deparment")
                        .WithMany("Classes")
                        .HasForeignKey("IdDeparment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deparment");
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.Student", b =>
                {
                    b.HasOne("UniversityManagement.Entities.Models.Class", "Class")
                        .WithMany("Students")
                        .HasForeignKey("IdClass");

                    b.Navigation("Class");
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.Subject", b =>
                {
                    b.HasOne("UniversityManagement.Entities.Models.Teacher", "Teacher")
                        .WithMany("Subjects")
                        .HasForeignKey("IdTeacher")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.Subject_Classroom", b =>
                {
                    b.HasOne("UniversityManagement.Entities.Models.ClassRoom", "ClassRoom")
                        .WithMany("Subject_Classrooms")
                        .HasForeignKey("IdRoom")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversityManagement.Entities.Models.Subject", "Subject")
                        .WithMany("Subject_Classroom")
                        .HasForeignKey("IdSubject")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassRoom");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.Subject_Score", b =>
                {
                    b.HasOne("UniversityManagement.Entities.Models.Student", "Student")
                        .WithMany("Subject_Scores")
                        .HasForeignKey("IdStudent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversityManagement.Entities.Models.Subject", "Subject")
                        .WithMany("Subject_Score")
                        .HasForeignKey("IdSubject")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.Subject_Student", b =>
                {
                    b.HasOne("UniversityManagement.Entities.Models.Student", "Student")
                        .WithMany("Subject_Students")
                        .HasForeignKey("IdStudent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversityManagement.Entities.Models.Subject", "Subject")
                        .WithMany("Subject_Student")
                        .HasForeignKey("IdSubject")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.Class", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.ClassRoom", b =>
                {
                    b.Navigation("Subject_Classrooms");
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.Department", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.Student", b =>
                {
                    b.Navigation("Subject_Scores");

                    b.Navigation("Subject_Students");
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.Subject", b =>
                {
                    b.Navigation("Subject_Classroom");

                    b.Navigation("Subject_Score");

                    b.Navigation("Subject_Student");
                });

            modelBuilder.Entity("UniversityManagement.Entities.Models.Teacher", b =>
                {
                    b.Navigation("Subjects");
                });
#pragma warning restore 612, 618
        }
    }
}
